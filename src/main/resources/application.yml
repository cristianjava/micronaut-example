micronaut:
  application:
    name: micronautExample
  server:
    port: 80
    dual-protocol: true
  ssl:
    enabled: true
    buildSelfSigned: true
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      redoc:
        paths: classpath:META-INF/swagger/views/redoc
        mapping: /redoc/**
      rapidoc:
        paths: classpath:META-INF/swagger/views/rapidoc
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
  security:
#    ip-patterns:
#      - 127.0.0.1
#      - 192.168.1.*
    authentication: bearer
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: changeThisSecretToALongSecureString
mongodb:
  uri: "mongodb://localhost:27017"
controller:
  hello:
    path: "/hello"
  SNSNotification: "/SNS"
  SNSNotificationSMS: "/SMSNotification"
  SNSNotificationEmail: "/EmailNotification"
  S3: "/S3"
  S3ListBuckets: "/ListBuckets"
  S3CreateBuckets: "/CreateBuckets"
  S3DeleteBuckets: "/DeleteBuckets"
  S3PutObjectIntoBuckets: "/PutObjectIntoBuckets"
constant:
  hello: "Hello World"
  default: "Default Value"
util:
  initial:
    config:
      es: "Spanish"
      en: "English"
gradle:
  dependencies:
    lombok: "1.18.20"
messages:
  services:
    methodStart: "Service has started correctly"
    methodEnd: "Service has ended correctly"
  controller:
    methodStart: "Controller has started correctly"
aws:
  cognito:
    access-key-id: "AKIAVYM47NFPNMOQGQRJ"
    secret-access-key: "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"
    user-pool-id: "us-east-2_qb9ks3Rx3"
    client-id: "48i3c27nrsofcbjq05ah65s0t0"
    client-secret: "qjek7rgttdd6k09v27fr4i77andcat3j5fe9b7okq8gko3mf0c8"
  kms:
    access-key-id: "AKIAVYM47NFPHK7PVXTB"
    secret-access-key: "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"
  dynamodb:
    access-key-id: ""
    secret-access-key: ""
  redis:
    primary-endpoint: "dale-portal-redis.gyk9d1.0001.use2.cache.amazonaws.com"
    port: 6379
  sns:
    accessKey: ""
    secretId: ""